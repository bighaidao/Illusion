{
	"xml": "<text>\n{{Text}}\n\n</text>",
	"文本": "```plainText:xxx\n\n```",
	".py": "```python:xxx.py\n\n```",
	".js": "```javascript:xxx.js\n\n```",
	".json": "```json:xxx.json\n\n```",
	"请翻译": "请翻译：\n<toTranslate>\n{{需要翻译的文本}}\n\n</toTranslate>",
	"逐步思考[简]": "Please think step-by-step.",
	"逐步思考[标签]": "在输出之前，请在<thinking>中逐步思考。首先，思考    ，然后思考    ，之后思考    。最后，请在<output>中输出    。",
	"Graphviz图表": "生成Graphviz图表。请按以下规则输出：\n\n1. **代码规范**：\n   - 所有属性必须用逗号分隔（如 `[shape=box, label=\"模块\"]`）\n   - 避免在标签/名称中使用空格，用下划线/驼峰命名法（如 `label=\"缓存数据\"` 改为 `label=\"缓存数据\"` 或 `label=\"cache_data\"`）\n   - 每个节点/连线语句以分号结尾\n\n2. **URL兼容性**：\n   - 将Graphviz代码中的空格替换为 `%20`（如 `label=\"读取%20数据\"`）\n   - 特殊符号（如引号）保留，QuickChart.io会自动处理\n\n3. **输出格式**：严格使用以下Markdown格式[但避免使用代码块]：\n   ![描述](https://quickchart.io/graphviz?graph=digraph{rankdir=TB;节点1[shape=box];节点2[shape=ellipse];节点1->节点2[label=交互]})\n   或\n   ![描述](https://quickchart.io/graphviz?graph=digraph{rankdir=LR;节点1[shape=box];节点2[shape=ellipse];节点1->节点2[label=交互]})\n   （备注：若图片未正常加载，请点击链接查看。可通过修改graph=后的代码调整图表）\n\n注意：请根据实际需求选择方向布局：\n- `rankdir=TB`：从上到下\n- `rankdir=LR`：从左到右"
}
